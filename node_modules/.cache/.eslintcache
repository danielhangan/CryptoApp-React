[{"/home/scooch/Dev/projects/cryptoapp/src/index.js":"1","/home/scooch/Dev/projects/cryptoapp/src/App.js":"2","/home/scooch/Dev/projects/cryptoapp/src/components/Navbar.jsx":"3","/home/scooch/Dev/projects/cryptoapp/src/components/index.js":"4","/home/scooch/Dev/projects/cryptoapp/src/components/Homepage.jsx":"5","/home/scooch/Dev/projects/cryptoapp/src/components/Cryptocurrencies.jsx":"6","/home/scooch/Dev/projects/cryptoapp/src/components/News.jsx":"7","/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx":"8","/home/scooch/Dev/projects/cryptoapp/src/components/Cryptodetails.jsx":"9","/home/scooch/Dev/projects/cryptoapp/src/app/store.js":"10","/home/scooch/Dev/projects/cryptoapp/src/services/cryptoApi.js":"11","/home/scooch/Dev/projects/cryptoapp/src/services/cryptoNewsApi.js":"12","/home/scooch/Dev/projects/cryptoapp/src/components/LineChart.jsx":"13","/home/scooch/Dev/projects/cryptoapp/src/components/Loader.jsx":"14"},{"size":407,"mtime":1632216073208,"results":"15","hashOfConfig":"16"},{"size":1939,"mtime":1632573813210,"results":"17","hashOfConfig":"16"},{"size":2109,"mtime":1632651701763,"results":"18","hashOfConfig":"16"},{"size":361,"mtime":1632658405636,"results":"19","hashOfConfig":"16"},{"size":1910,"mtime":1632658424704,"results":"20","hashOfConfig":"16"},{"size":1986,"mtime":1632658298820,"results":"21","hashOfConfig":"16"},{"size":3185,"mtime":1632658470436,"results":"22","hashOfConfig":"16"},{"size":1804,"mtime":1632658358272,"results":"23","hashOfConfig":"16"},{"size":6294,"mtime":1632658279068,"results":"24","hashOfConfig":"16"},{"size":333,"mtime":1632387402472,"results":"25","hashOfConfig":"16"},{"size":1149,"mtime":1632658322572,"results":"26","hashOfConfig":"16"},{"size":829,"mtime":1632667503090,"results":"27","hashOfConfig":"16"},{"size":1583,"mtime":1632658311244,"results":"28","hashOfConfig":"16"},{"size":193,"mtime":1632659918380,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g7bavy",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/scooch/Dev/projects/cryptoapp/src/index.js",[],"/home/scooch/Dev/projects/cryptoapp/src/App.js",[],"/home/scooch/Dev/projects/cryptoapp/src/components/Navbar.jsx",[],"/home/scooch/Dev/projects/cryptoapp/src/components/index.js",[],"/home/scooch/Dev/projects/cryptoapp/src/components/Homepage.jsx",[],"/home/scooch/Dev/projects/cryptoapp/src/components/Cryptocurrencies.jsx",["60"],"import React, { useState, useEffect } from 'react'\nimport millify from 'millify'\nimport { Link } from 'react-router-dom'\nimport { Card, Row, Col, Input } from 'antd'\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n    const count = simplified ? 10 : 100\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n    const [cryptos, setCryptos] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n        setCryptos(filteredData)\n    }, [cryptosList, searchTerm])\n\n     if(isFetching) return <Loader />\n\n    return (\n        <>\n        {!simplified && (\n            <div className='search-crypto'>\n                <Input placeholder=\"Search Cryptocurrency\"onChange={(e) => setSearchTerm(e.target.value)}/>\n            </div>\n        )}\n            <Row gutter={[32, 32]} className='crypto-card-container'>\n                {cryptos?.map((currency) => (\n                    <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.id}>\n                        <Link to={`/crypto/${currency.id}`}>\n                            <Card \n                                title={`${currency.rank}. ${currency.name}`}\n                                extra={<img className='crypto-image' src={currency.iconUrl} />}\n                                hoverable\n                            >\n                                <p>Price: {millify(currency.price)}</p>\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\n                                <p>Daily Change: {millify(currency.change)}%</p>\n                            </Card>\n                        </Link>\n                    </Col>\n                ))}\n            </Row>\n        </>\n    )\n}\n\nexport default Cryptocurrencies\n","/home/scooch/Dev/projects/cryptoapp/src/components/News.jsx",[],"/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx",["61"],"import React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { Table, Typography, Avatar } from 'antd';\nimport millify from 'millify';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Title, Text } = Typography;\n\n\nconst Exchanges = () => {\n    const { data, isFetching } = useGetCryptoExchangesQuery();\n    const exchangesData = data?.data?.exchanges\n\n    if (isFetching) return <Loader />\n\n\n    console.log(exchangesData)\n\n    const columns = [\n        {\n            title: 'Exchanges',\n            dataIndex: ['name', 'iconUrl'],\n            render: (text, record) => <Text strong>{record.rank}.<Avatar className=\"exchange-image\" src={record.iconUrl} />{record.name}</Text>\n        },\n        { \n            title: '24h Trade Volume', \n            dataIndex: 'volume',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.volume - b.volume,\n            render: text => `$${millify(text)}` },\n        { \n            title: 'Markets', \n            dataIndex: 'numberOfMarkets',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.numberOfMarkets - b.numberOfMarkets,\n            render: markets => millify(markets)},\n        { \n            title: 'Change', \n            dataIndex: 'marketShare',\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.marketShare - b.marketShare,\n            render: share => `${millify(share)}%`\n        }\n    ];\n\n\n    return (\n        <Table \n            rowKey='id'\n            columns={columns}\n            expandable={{\n                expandedRowRender: record => <p style={{ margin: 0 }}>{HTMLReactParser(record.description)}</p>\n              }}\n            dataSource={exchangesData} />\n    )\n}\n\nexport default Exchanges;\n","/home/scooch/Dev/projects/cryptoapp/src/components/Cryptodetails.jsx",[],"/home/scooch/Dev/projects/cryptoapp/src/app/store.js",[],"/home/scooch/Dev/projects/cryptoapp/src/services/cryptoApi.js",[],"/home/scooch/Dev/projects/cryptoapp/src/services/cryptoNewsApi.js",[],"/home/scooch/Dev/projects/cryptoapp/src/components/LineChart.jsx",[],"/home/scooch/Dev/projects/cryptoapp/src/components/Loader.jsx",[],{"ruleId":"62","severity":1,"message":"63","line":37,"column":40,"nodeType":"64","endLine":37,"endColumn":95},{"ruleId":"65","severity":1,"message":"66","line":8,"column":9,"nodeType":"67","messageId":"68","endLine":8,"endColumn":14},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Title' is assigned a value but never used.","Identifier","unusedVar"]