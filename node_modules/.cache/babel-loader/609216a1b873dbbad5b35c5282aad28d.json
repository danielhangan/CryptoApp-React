{"ast":null,"code":"import React from'react';import{Line}from'react-chartjs-2';import{Col,Row,Typography}from'antd';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Title=Typography.Title;var LineChart=function LineChart(_ref){var _coinHistory$data2;var coinHistory=_ref.coinHistory,currentPrice=_ref.currentPrice,coinName=_ref.coinName;var coinPrice=[];var coinTimestamp=[];for(var i=0;i<(coinHistory===null||coinHistory===void 0?void 0:(_coinHistory$data=coinHistory.data)===null||_coinHistory$data===void 0?void 0:(_coinHistory$data$his=_coinHistory$data.history)===null||_coinHistory$data$his===void 0?void 0:_coinHistory$data$his.length);i++){var _coinHistory$data,_coinHistory$data$his;coinPrice.push(coinHistory.data.history[i].price);coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());}var data={labels:coinTimestamp,datasets:[{label:\"Price in USD\",data:coinPrice,fill:false,backgroundcolor:'#0071bd',borderColor:'#0071bd'}]};var options={scales:{yAxes:[{ticks:{beginAtZero:true}}]}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Row,{className:\"chart-header\",children:[/*#__PURE__*/_jsxs(Title,{level:2,className:\"chart-title\",children:[coinName,\" Price Chart\"]}),/*#__PURE__*/_jsxs(Col,{className:\"price-container\",children:[/*#__PURE__*/_jsxs(Title,{level:5,className:\"price-change\",children:[coinHistory===null||coinHistory===void 0?void 0:(_coinHistory$data2=coinHistory.data)===null||_coinHistory$data2===void 0?void 0:_coinHistory$data2.change,\"%\"]}),/*#__PURE__*/_jsxs(Title,{level:5,className:\"current-price\",children:[\"Current \",coinName,\" Price: $ \",currentPrice]})]})]}),/*#__PURE__*/_jsx(Line,{data:data,option:options})]});};export default LineChart;","map":{"version":3,"sources":["/home/scooch/Dev/projects/cryptoapp/src/components/LineChart.jsx"],"names":["React","Line","Col","Row","Typography","Title","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","data","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundcolor","borderColor","options","scales","yAxes","ticks","beginAtZero","change"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,UAAnB,KAAqC,MAArC,C,wFAEA,GAAQC,CAAAA,KAAR,CAAkBD,UAAlB,CAAQC,KAAR,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA6C,2BAA1CC,CAAAA,WAA0C,MAA1CA,WAA0C,CAA7BC,YAA6B,MAA7BA,YAA6B,CAAfC,QAAe,MAAfA,QAAe,CAC3D,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAGL,WAAH,SAAGA,WAAH,oCAAGA,WAAW,CAAEM,IAAhB,mEAAG,kBAAmBC,OAAtB,gDAAG,sBAA4BC,MAA/B,CAAjB,CAAwDH,CAAC,EAAzD,CAA6D,6CACzDF,SAAS,CAACM,IAAV,CAAeT,WAAW,CAACM,IAAZ,CAAiBC,OAAjB,CAAyBF,CAAzB,EAA4BK,KAA3C,EACAN,aAAa,CAACK,IAAd,CAAmB,GAAIE,CAAAA,IAAJ,CAASX,WAAW,CAACM,IAAZ,CAAiBC,OAAjB,CAAyBF,CAAzB,EAA4BO,SAArC,EAAgDC,kBAAhD,EAAnB,EACH,CAED,GAAMP,CAAAA,IAAI,CAAG,CACTQ,MAAM,CAAEV,aADC,CAETW,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,cADX,CAEIV,IAAI,CAAEH,SAFV,CAGIc,IAAI,CAAE,KAHV,CAIIC,eAAe,CAAE,SAJrB,CAKIC,WAAW,CAAE,SALjB,CADM,CAFD,CAAb,CAaA,GAAMC,CAAAA,OAAO,CAAG,CACZC,MAAM,CAAE,CACJC,KAAK,CAAE,CACH,CACIC,KAAK,CAAE,CACHC,WAAW,CAAE,IADV,CADX,CADG,CADH,CADI,CAAhB,CAaA,mBACI,oCACI,MAAC,GAAD,EAAK,SAAS,CAAC,cAAf,wBACI,MAAC,KAAD,EAAO,KAAK,CAAE,CAAd,CAAiB,SAAS,CAAC,aAA3B,WAA0CtB,QAA1C,kBADJ,cAEI,MAAC,GAAD,EAAK,SAAS,CAAC,iBAAf,wBACI,MAAC,KAAD,EAAO,KAAK,CAAE,CAAd,CAAiB,SAAS,CAAC,cAA3B,WAA2CF,WAA3C,SAA2CA,WAA3C,qCAA2CA,WAAW,CAAEM,IAAxD,6CAA2C,mBAAmBmB,MAA9D,OADJ,cAEI,MAAC,KAAD,EAAO,KAAK,CAAE,CAAd,CAAiB,SAAS,CAAC,eAA3B,sBAAoDvB,QAApD,cAAwED,YAAxE,GAFJ,GAFJ,GADJ,cAQI,KAAC,IAAD,EAAM,IAAI,CAAEK,IAAZ,CAAkB,MAAM,CAAEc,OAA1B,EARJ,GADJ,CAYH,CA/CD,CAiDA,cAAerB,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n    const coinPrice = [];\n    const coinTimestamp = [];\n\n    for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\n        coinPrice.push(coinHistory.data.history[i].price)\n        coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\n    }\n\n    const data = {\n        labels: coinTimestamp,\n        datasets: [\n            {\n                label: \"Price in USD\",\n                data: coinPrice,\n                fill: false,\n                backgroundcolor: '#0071bd',\n                borderColor: '#0071bd'\n            }\n        ]\n    }\n\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }\n            ]\n        }\n    }\n\n\n    return (\n        <div>\n            <Row className=\"chart-header\">\n                <Title level={2} className=\"chart-title\">{coinName} Price Chart</Title>\n                <Col className=\"price-container\">\n                    <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>    \n                </Col>\n            </Row>\n            <Line data={data} option={options} />\n        </div>\n    )\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}