{"ast":null,"code":"var _jsxFileName = \"/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { Table, Typography, Avatar, Icon } from 'antd';\nimport millify from 'millify';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\n\nconst Exchanges = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    data,\n    isFetching\n  } = useGetCryptoExchangesQuery(10);\n  const exchangesData = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.exchanges;\n  if (isFetching) return 'Loading...';\n  console.log(exchangesData);\n  const columns = [{\n    title: 'Exchanges',\n    dataIndex: ['name', 'iconUrl'],\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Text, {\n      strong: true,\n      children: [record.rank, \".\", /*#__PURE__*/_jsxDEV(Avatar, {\n        className: \"exchange-image\",\n        src: record.iconUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 66\n      }, this), record.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 39\n    }, this)\n  }, {\n    title: '24h Trade Volume',\n    dataIndex: 'volume',\n    render: text => `$${millify(text)}`\n  }, {\n    title: 'Markets',\n    dataIndex: 'numberOfMarkets',\n    render: markets => millify(markets)\n  }, {\n    title: 'Change',\n    dataIndex: 'marketShare',\n    render: share => `${millify(share)}%`\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    rowKey: \"id\",\n    columns: columns,\n    expandableRowIcon: /*#__PURE__*/_jsxDEV(Icon, {\n      type: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }, this),\n    expandable: {\n      expandedRowRender: record => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: HTMLReactParser(record.description)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 46\n      }, this)\n    },\n    dataSource: exchangesData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Exchanges, \"ZdVHRKEf55DOJrZPu2OsGsDhinM=\", false, function () {\n  return [useGetCryptoExchangesQuery];\n});\n\n_c = Exchanges;\nexport default Exchanges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"sources":["/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx"],"names":["React","HTMLReactParser","Table","Typography","Avatar","Icon","millify","useGetCryptoExchangesQuery","Title","Text","Exchanges","data","isFetching","exchangesData","exchanges","console","log","columns","title","dataIndex","render","text","record","rank","iconUrl","name","markets","share","expandedRowRender","margin","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,IAApC,QAAgD,MAAhD;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,0BAAT,QAA2C,uBAA3C;;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAkBN,UAAxB;;AAGA,MAAMO,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBL,0BAA0B,CAAC,EAAD,CAAvD;AACA,QAAMM,aAAa,GAAGF,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYG,SAAlC;AAEA,MAAIF,UAAJ,EAAgB,OAAO,YAAP;AAGhBG,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AAEA,QAAMI,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,WADX;AAEIC,IAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,SAAT,CAFf;AAGIC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBAAkB,QAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAA,iBAAcA,MAAM,CAACC,IAArB,oBAA2B,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,GAAG,EAAED,MAAM,CAACE;AAA/C;AAAA;AAAA;AAAA;AAAA,cAA3B,EAAsFF,MAAM,CAACG,IAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAH9B,GADY,EAMZ;AACIP,IAAAA,KAAK,EAAE,kBADX;AAEIC,IAAAA,SAAS,EAAE,QAFf;AAGIC,IAAAA,MAAM,EAAEC,IAAI,IAAK,IAAGf,OAAO,CAACe,IAAD,CAAO;AAHtC,GANY,EAUZ;AACIH,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE,iBAFf;AAGIC,IAAAA,MAAM,EAAEM,OAAO,IAAIpB,OAAO,CAACoB,OAAD;AAH9B,GAVY,EAcZ;AACIR,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,SAAS,EAAE,aAFf;AAGIC,IAAAA,MAAM,EAAEO,KAAK,IAAK,GAAErB,OAAO,CAACqB,KAAD,CAAQ;AAHvC,GAdY,CAAhB;AAsBA,sBACI,QAAC,KAAD;AACI,IAAA,MAAM,EAAC,IADX;AAEI,IAAA,OAAO,EAAEV,OAFb;AAGI,IAAA,iBAAiB,eAAE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YAHvB;AAII,IAAA,UAAU,EAAE;AACRW,MAAAA,iBAAiB,EAAEN,MAAM,iBAAI;AAAG,QAAA,KAAK,EAAE;AAAEO,UAAAA,MAAM,EAAE;AAAV,SAAV;AAAA,kBAA0B5B,eAAe,CAACqB,MAAM,CAACQ,WAAR;AAAzC;AAAA;AAAA;AAAA;AAAA;AADrB,KAJhB;AAOI,IAAA,UAAU,EAAEjB;AAPhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAzCD;;GAAMH,S;UAC2BH,0B;;;KAD3BG,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { Table, Typography, Avatar, Icon } from 'antd';\nimport millify from 'millify';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\n\nconst { Title, Text } = Typography;\n\n\nconst Exchanges = () => {\n    const { data, isFetching } = useGetCryptoExchangesQuery(10);\n    const exchangesData = data?.data?.exchanges\n\n    if (isFetching) return 'Loading...'\n\n\n    console.log(exchangesData)\n\n    const columns = [\n        {\n            title: 'Exchanges',\n            dataIndex: ['name', 'iconUrl'],\n            render: (text, record) => <Text strong>{record.rank}.<Avatar className=\"exchange-image\" src={record.iconUrl} />{record.name}</Text>\n        },\n        { \n            title: '24h Trade Volume', \n            dataIndex: 'volume', \n            render: text => `$${millify(text)}` },\n        { \n            title: 'Markets', \n            dataIndex: 'numberOfMarkets', \n            render: markets => millify(markets)},\n        { \n            title: 'Change', \n            dataIndex: 'marketShare', \n            render: share => `${millify(share)}%`\n        }\n    ];\n\n\n    return (\n        <Table \n            rowKey='id'\n            columns={columns}\n            expandableRowIcon={<Icon type=\"right\" />}\n            expandable={{\n                expandedRowRender: record => <p style={{ margin: 0 }}>{HTMLReactParser(record.description)}</p>\n              }}\n            dataSource={exchangesData} />\n    )\n}\n\nexport default Exchanges;\n"]},"metadata":{},"sourceType":"module"}