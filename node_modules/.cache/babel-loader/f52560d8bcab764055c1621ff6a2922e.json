{"ast":null,"code":"var _jsxFileName = \"/home/scooch/Dev/projects/cryptoapp/src/components/Cryptodetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\nimport { useGetCryptoDetailsQuery } from '../services/cryptoApi';\nimport LineChart from './LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\n\nconst Cryptodetails = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    coinId\n  } = useParams();\n  const {\n    timePeriod,\n    setTimePeriod\n  } = useState('7d');\n  const {\n    data,\n    isFetching\n  } = useGetCryptoDetailsQuery(coinId);\n  const cryptoDetails = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.coin;\n  if (isFetching) return 'Loading...';\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n  const stats = [{\n    title: 'Price to USD',\n    value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 107\n    }, this)\n  }, {\n    title: 'Rank',\n    value: cryptoDetails.rank,\n    icon: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 59\n    }, this)\n  }, {\n    title: '24h Volume',\n    value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n    icon: /*#__PURE__*/_jsxDEV(ThunderboltOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 107\n    }, this)\n  }, {\n    title: 'Market Cap',\n    value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n    icon: /*#__PURE__*/_jsxDEV(DollarCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 113\n    }, this)\n  }, {\n    title: 'All-time-high(daily avg.)',\n    value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n    icon: /*#__PURE__*/_jsxDEV(TrophyOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 109\n    }, this)\n  }];\n  const genericStats = [{\n    title: 'Number Of Markets',\n    value: cryptoDetails.numberOfMarkets,\n    icon: /*#__PURE__*/_jsxDEV(FundOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 83\n    }, this)\n  }, {\n    title: 'Number Of Exchanges',\n    value: cryptoDetails.numberOfExchanges,\n    icon: /*#__PURE__*/_jsxDEV(MoneyCollectOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 87\n    }, this)\n  }, {\n    title: 'Aprroved Supply',\n    value: cryptoDetails.approvedSupply ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 75\n    }, this) : /*#__PURE__*/_jsxDEV(StopOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 95\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 119\n    }, this)\n  }, {\n    title: 'Total Supply',\n    value: `$ ${millify(cryptoDetails.totalSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 90\n    }, this)\n  }, {\n    title: 'Circulating Supply',\n    value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n    icon: /*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 102\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"coin-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-heading-contaienr\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        className: \"coin-name\",\n        children: [cryptoDetails.name, \" (\", cryptoDetails.slug, \") Price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [cryptoDetails.name, \" live price in US dollars. View value statistics, market cap and supply.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: \"7d\",\n      className: \"select-timeperiod\",\n      placeholder: \"Select Time Period\",\n      onChange: value => setTimePeriod(value),\n      children: time.map(date => /*#__PURE__*/_jsxDEV(Option, {\n        children: date\n      }, date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      coinHistory: coinHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"stats-container\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"coin-value-statistics\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-value-statistics-heading\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            className: \"coin-details-heading\",\n            children: [cryptoDetails.name, \" Value Statistics\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"An overview showing the stats of \", cryptoDetails.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), stats.map(({\n          icon,\n          title,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-stats\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-stats-name\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            className: \"stats\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"other-stats-info\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-value-statistics-heading\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 3,\n            className: \"coin-details-heading\",\n            children: \"Other Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"An overview showing the stats of all cryptocurrencies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), genericStats.map(({\n          icon,\n          title,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"coin-stats\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"coin-stats-name\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            className: \"stats\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"coin-desc-link\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"coin-desc\",\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          level: 3,\n          className: \"coin-details-heading\",\n          children: [\"What is \", cryptoDetails.name, HTMLReactParser(cryptoDetails.description)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"coin-links\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 3,\n          className: \"coin-details-heading\",\n          children: [cryptoDetails.name, \" Links\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), cryptoDetails.links.map(link => /*#__PURE__*/_jsxDEV(Row, {\n          className: \"coin-link\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            level: 5,\n            className: \"link-name\",\n            children: link.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: link.url,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: link.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, link.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cryptodetails, \"lU1iagjHISYgpU3qiWRaL9k98sI=\", false, function () {\n  return [useParams, useGetCryptoDetailsQuery];\n});\n\n_c = Cryptodetails;\nexport default Cryptodetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cryptodetails\");","map":{"version":3,"sources":["/home/scooch/Dev/projects/cryptoapp/src/components/Cryptodetails.jsx"],"names":["React","useState","HTMLReactParser","useParams","millify","Col","Row","Typography","Select","MoneyCollectOutlined","DollarCircleOutlined","FundOutlined","ExclamationCircleOutlined","StopOutlined","TrophyOutlined","CheckOutlined","NumberOutlined","ThunderboltOutlined","useGetCryptoDetailsQuery","LineChart","Title","Text","Option","Cryptodetails","coinId","timePeriod","setTimePeriod","data","isFetching","cryptoDetails","coin","time","stats","title","value","price","icon","rank","volume","marketCap","allTimeHigh","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","totalSupply","circulatingSupply","name","slug","map","date","coinHistory","description","links","link","type","url"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery } from '../services/cryptoApi';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n\nconst Cryptodetails = () => {\n    const { coinId } = useParams();\n    const { timePeriod, setTimePeriod } = useState('7d');\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n    const cryptoDetails = data?.data?.coin;\n\n    if(isFetching) return 'Loading...'\n    \n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n    const stats = [\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n    ];\n\n    const genericStats = [\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n    ];\n\n\n    return (\n        <Col className=\"coin-detail-container\">\n            <Col className=\"coin-heading-contaienr\">\n                <Title level={2} className=\"coin-name\">\n                    {cryptoDetails.name} ({cryptoDetails.slug}) Price\n                </Title>\n                <p>\n                    {cryptoDetails.name} live price in US dollars.\n                    View value statistics, market cap and supply.\n                </p>\n            </Col>\n            <Select \n                defaultValue=\"7d\" \n                className=\"select-timeperiod\" \n                placeholder=\"Select Time Period\" \n                onChange={(value) => setTimePeriod(value)}\n            >\n                {time.map((date) => <Option key={date}>{date}</Option>)}\n            </Select>\n            <LineChart coinHistory={coinHistory}/>\n            <Col className=\"stats-container\">\n                <Col className=\"coin-value-statistics\">\n                    <Col className=\"coin-value-statistics-heading\">\n                        <Title level={3} className=\"coin-details-heading\">\n                            {cryptoDetails.name} Value Statistics\n                        </Title>\n                        <p>\n                            An overview showing the stats of {cryptoDetails.name}\n                        </p>\n                    </Col>\n                    {stats.map(({ icon, title, value}) => (\n                        <Col className=\"coin-stats\">\n                            <Col className=\"coin-stats-name\">\n                                <Text>{icon}</Text>\n                                <Text>{title}</Text>\n                            </Col>\n                            <Text className=\"stats\">{value}</Text>\n                        </Col>\n                    ))}\n                </Col>\n\n                <Col className=\"other-stats-info\">\n                    <Col className=\"coin-value-statistics-heading\">\n                        <Title level={3} className=\"coin-details-heading\">\n                            Other Statistics\n                        </Title>\n                        <p>\n                            An overview showing the stats of all cryptocurrencies\n                        </p>\n                    </Col>\n                    {genericStats.map(({ icon, title, value}) => (\n                        <Col className=\"coin-stats\">\n                            <Col className=\"coin-stats-name\">\n                                <Text>{icon}</Text>\n                                <Text>{title}</Text>\n                            </Col>\n                            <Text className=\"stats\">{value}</Text>\n                        </Col>\n                    ))}\n                </Col>\n            </Col>\n\n            <Col className=\"coin-desc-link\">\n                <Row className=\"coin-desc\">\n                    <Title level={3} className=\"coin-details-heading\">\n                        What is {cryptoDetails.name}\n                        {HTMLReactParser(cryptoDetails.description)}\n                    </Title>\n                </Row>\n                <Col className=\"coin-links\">\n                    <Title level={3} className=\"coin-details-heading\">\n                        {cryptoDetails.name} Links\n                    </Title>\n                    {cryptoDetails.links.map((link) => (\n                        <Row className=\"coin-link\" key={link.name}>\n                            <Title level={5} className=\"link-name\">\n                                {link.type}\n                            </Title>\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                                {link.name}\n                            </a>\n                        </Row>\n                    ))}\n                </Col>\n            </Col>\n\n        </Col>\n    )\n}\n\nexport default Cryptodetails;\n"]},"metadata":{},"sourceType":"module"}