{"ast":null,"code":"var _jsxFileName = \"/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { Table, Typography, Col } from 'antd';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst Exchanges = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    data,\n    isFetching\n  } = useGetCryptoExchangesQuery(10);\n  const exchangesData = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.exchanges;\n  if (isFetching) return 'Loading...';\n  console.log(exchangesData);\n  const columns = [{\n    title: 'Exchanges',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: '24h Trade Volume',\n    dataIndex: 'volumne',\n    key: 'volume'\n  }, {\n    title: 'Markets',\n    dataIndex: 'numberOfMarkets',\n    key: 'numberOfMarkets'\n  }, {\n    title: 'Change',\n    dataIndex: 'marketShare',\n    key: 'marketShare'\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: \"Exchanges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"24h Trade Volume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"Markets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"Change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this) // <Table>\n  // </Table>\n  ;\n};\n\n_s(Exchanges, \"ZdVHRKEf55DOJrZPu2OsGsDhinM=\", false, function () {\n  return [useGetCryptoExchangesQuery];\n});\n\n_c = Exchanges;\nexport default Exchanges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"sources":["/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx"],"names":["React","HTMLReactParser","Table","Typography","Col","useGetCryptoExchangesQuery","Title","Exchanges","data","isFetching","exchangesData","exchanges","console","log","columns","title","dataIndex","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,GAA5B,QAAuC,MAAvC;AACA,SAASC,0BAAT,QAA2C,uBAA3C;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYH,UAAlB;;AAGA,MAAMI,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBJ,0BAA0B,CAAC,EAAD,CAAvD;AACA,QAAMK,aAAa,GAAGF,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYG,SAAlC;AAEA,MAAIF,UAAJ,EAAgB,OAAO,YAAP;AAGhBG,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AAEA,QAAMI,OAAO,GAAG,CACZ;AAAEC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,SAAS,EAAE,MAAjC;AAAyCC,IAAAA,GAAG,EAAE;AAA9C,GADY,EAEZ;AAAEF,IAAAA,KAAK,EAAE,kBAAT;AAA6BC,IAAAA,SAAS,EAAE,SAAxC;AAAmDC,IAAAA,GAAG,EAAE;AAAxD,GAFY,EAGZ;AAAEF,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,SAAS,EAAE,iBAA/B;AAAkDC,IAAAA,GAAG,EAAE;AAAvD,GAHY,EAIZ;AAAEF,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,SAAS,EAAE,aAA9B;AAA6CC,IAAAA,GAAG,EAAE;AAAlD,GAJY,CAAhB;AAQA,sBACI,QAAC,KAAD;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAOI;AACA;AARJ;AAUH,CA3BD;;GAAMV,S;UAC2BF,0B;;;KAD3BE,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { Table, Typography, Col } from 'antd';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\n\nconst { Title } = Typography;\n\n\nconst Exchanges = () => {\n    const { data, isFetching } = useGetCryptoExchangesQuery(10);\n    const exchangesData = data?.data?.exchanges\n\n    if (isFetching) return 'Loading...'\n\n\n    console.log(exchangesData)\n\n    const columns = [\n        { title: 'Exchanges', dataIndex: 'name', key: 'name' },\n        { title: '24h Trade Volume', dataIndex: 'volumne', key: 'volume' },\n        { title: 'Markets', dataIndex: 'numberOfMarkets', key: 'numberOfMarkets' },\n        { title: 'Change', dataIndex: 'marketShare', key: 'marketShare' },\n    ];\n\n\n    return (\n        <Table>\n            <Col>Exchanges</Col>\n            <Col>24h Trade Volume</Col>\n            <Col>Markets</Col>\n            <Col>Change</Col>\n        </Table>\n        // <Table>\n        // </Table>\n    )\n}\n\nexport default Exchanges\n"]},"metadata":{},"sourceType":"module"}