{"ast":null,"code":"var _jsxFileName = \"/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { Table, Typography, Col, Image, Avatar } from 'antd';\nimport millify from 'millify';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\n\nconst Exchanges = () => {\n  _s();\n\n  var _data$data;\n\n  const {\n    data,\n    isFetching\n  } = useGetCryptoExchangesQuery(10);\n  const exchangesData = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.exchanges;\n  if (isFetching) return 'Loading...';\n  console.log(exchangesData);\n  const columns = [{\n    title: 'Exchanges',\n    dataIndex: ['name', 'iconUrl'],\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Title, {\n      level: 5,\n      children: [record.rank, \".\", /*#__PURE__*/_jsxDEV(Avatar, {\n        className: \"exchange-image\",\n        src: record.iconUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 70\n      }, this), record.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 39\n    }, this)\n  }, {\n    title: '24h Trade Volume',\n    dataIndex: 'volume',\n    render: text => `$${millify(text)}`\n  }, {\n    title: 'Markets',\n    dataIndex: 'numberOfMarkets',\n    render: markets => millify(markets)\n  }, {\n    title: 'Change',\n    dataIndex: 'marketShare',\n    render: share => `${millify(share)}%`\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: exchangesData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Exchanges, \"ZdVHRKEf55DOJrZPu2OsGsDhinM=\", false, function () {\n  return [useGetCryptoExchangesQuery];\n});\n\n_c = Exchanges;\nexport default Exchanges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"sources":["/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx"],"names":["React","HTMLReactParser","Table","Typography","Col","Image","Avatar","millify","useGetCryptoExchangesQuery","Title","Text","Exchanges","data","isFetching","exchangesData","exchanges","console","log","columns","title","dataIndex","render","text","record","rank","iconUrl","name","markets","share"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAsD,MAAtD;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,0BAAT,QAA2C,uBAA3C;;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAkBP,UAAxB;;AAGA,MAAMQ,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBL,0BAA0B,CAAC,EAAD,CAAvD;AACA,QAAMM,aAAa,GAAGF,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYG,SAAlC;AAEA,MAAIF,UAAJ,EAAgB,OAAO,YAAP;AAGhBG,EAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AAEA,QAAMI,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,WADX;AAEIC,IAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,SAAT,CAFf;AAGIC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBAAkB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAd;AAAA,iBAAkBA,MAAM,CAACC,IAAzB,oBAA+B,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,GAAG,EAAED,MAAM,CAACE;AAA/C;AAAA;AAAA;AAAA;AAAA,cAA/B,EAA0FF,MAAM,CAACG,IAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAH9B,GADY,EAMZ;AAAEP,IAAAA,KAAK,EAAE,kBAAT;AAA6BC,IAAAA,SAAS,EAAE,QAAxC;AAAkDC,IAAAA,MAAM,EAAEC,IAAI,IAAK,IAAGf,OAAO,CAACe,IAAD,CAAO;AAApF,GANY,EAOZ;AAAEH,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,SAAS,EAAE,iBAA/B;AAAkDC,IAAAA,MAAM,EAAEM,OAAO,IAAIpB,OAAO,CAACoB,OAAD;AAA5E,GAPY,EAQZ;AAAER,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,SAAS,EAAE,aAA9B;AAA6CC,IAAAA,MAAM,EAAEO,KAAK,IAAK,GAAErB,OAAO,CAACqB,KAAD,CAAQ;AAAhF,GARY,CAAhB;AAYA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEV,OAAhB;AAAyB,IAAA,UAAU,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAxBD;;GAAMH,S;UAC2BH,0B;;;KAD3BG,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { Table, Typography, Col, Image, Avatar } from 'antd';\nimport millify from 'millify';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\n\nconst { Title, Text } = Typography;\n\n\nconst Exchanges = () => {\n    const { data, isFetching } = useGetCryptoExchangesQuery(10);\n    const exchangesData = data?.data?.exchanges\n\n    if (isFetching) return 'Loading...'\n\n\n    console.log(exchangesData)\n\n    const columns = [\n        {\n            title: 'Exchanges',\n            dataIndex: ['name', 'iconUrl'],\n            render: (text, record) => <Title level={5}>{record.rank}.<Avatar className=\"exchange-image\" src={record.iconUrl} />{record.name}</Title>\n        },\n        { title: '24h Trade Volume', dataIndex: 'volume', render: text => `$${millify(text)}` },\n        { title: 'Markets', dataIndex: 'numberOfMarkets', render: markets => millify(markets) },\n        { title: 'Change', dataIndex: 'marketShare', render: share => `${millify(share)}%` },\n    ];\n\n\n    return (\n        <Table columns={columns} dataSource={exchangesData} />\n    )\n}\n\nexport default Exchanges\n"]},"metadata":{},"sourceType":"module"}