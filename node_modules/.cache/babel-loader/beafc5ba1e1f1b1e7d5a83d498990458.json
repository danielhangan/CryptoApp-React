{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';var cryptoApiHeaders={'x-rapidapi-host':'coinranking1.p.rapidapi.com','x-rapidapi-key':'f2886fbfcamsh28008c0e5f20068p1bd8c9jsn57cb2e3b1439'};var baseUrl='https://coinranking1.p.rapidapi.com';var createRequest=function createRequest(url){return{url:url,headers:cryptoApiHeaders};};export var cryptoApi=createApi({reducerPath:'cryptoApi',baseQuery:fetchBaseQuery({baseUrl:baseUrl}),endpoints:function endpoints(builder){return{getCryptos:builder.query({query:function query(count){return createRequest(\"/coins?limit=\".concat(count));}}),getCryptoDetails:builder.query({query:function query(coinId){return createRequest(\"/coin/\".concat(coinId));}}),getCryptoHistory:builder.query({query:function query(_ref){var coinId=_ref.coinId,timePeriod=_ref.timePeriod;return createRequest(\"/coin/\".concat(coinId,\"/history/\").concat(timePeriod));}}),getCryptoExchanges:builder.query({query:function query(){return createRequest(\"/exchanges\");}})};}});var useGetCryptosQuery=cryptoApi.useGetCryptosQuery,useGetCryptoDetailsQuery=cryptoApi.useGetCryptoDetailsQuery,useGetCryptoHistoryQuery=cryptoApi.useGetCryptoHistoryQuery,useGetCryptoExchangesQuery=cryptoApi.useGetCryptoExchangesQuery;export{useGetCryptosQuery,useGetCryptoDetailsQuery,useGetCryptoHistoryQuery,useGetCryptoExchangesQuery};","map":{"version":3,"sources":["/home/scooch/Dev/projects/cryptoapp/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getCryptoExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetCryptoExchangesQuery"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACnB,kBAAmB,6BADA,CAEnB,iBAAkB,oDAFC,CAAzB,CAKA,GAAMC,CAAAA,OAAO,CAAG,qCAAhB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAAU,CAAEA,GAAG,CAAHA,GAAF,CAAOC,OAAO,CAAEJ,gBAAhB,CAAV,EAAtB,CAEA,MAAO,IAAMK,CAAAA,SAAS,CAAGP,SAAS,CAAC,CAC/BQ,WAAW,CAAE,WADkB,CAE/BC,SAAS,CAAER,cAAc,CAAC,CAAGE,OAAO,CAAPA,OAAH,CAAD,CAFM,CAG/BO,SAAS,CAAE,mBAACC,OAAD,QAAc,CACrBC,UAAU,CAAED,OAAO,CAACE,KAAR,CAAc,CACtBA,KAAK,CAAE,eAACC,KAAD,QAAWV,CAAAA,aAAa,wBAAiBU,KAAjB,EAAxB,EADe,CAAd,CADS,CAIrBC,gBAAgB,CAAEJ,OAAO,CAACE,KAAR,CAAc,CAC5BA,KAAK,CAAE,eAACG,MAAD,QAAYZ,CAAAA,aAAa,iBAAUY,MAAV,EAAzB,EADqB,CAAd,CAJG,CAOrBC,gBAAgB,CAAEN,OAAO,CAACE,KAAR,CAAc,CAC5BA,KAAK,CAAE,wBAAGG,CAAAA,MAAH,MAAGA,MAAH,CAAWE,UAAX,MAAWA,UAAX,OAA4Bd,CAAAA,aAAa,iBAAUY,MAAV,qBAA4BE,UAA5B,EAAzC,EADqB,CAAd,CAPG,CAUrBC,kBAAkB,CAAER,OAAO,CAACE,KAAR,CAAc,CAC9BA,KAAK,CAAE,uBAAMT,CAAAA,aAAa,cAAnB,EADuB,CAAd,CAVC,CAAd,EAHoB,CAAD,CAA3B,CAmBA,GAAQgB,CAAAA,kBAAR,CAA+Gb,SAA/G,CAAQa,kBAAR,CAA4BC,wBAA5B,CAA+Gd,SAA/G,CAA4Bc,wBAA5B,CAAsDC,wBAAtD,CAA+Gf,SAA/G,CAAsDe,wBAAtD,CAAgFC,0BAAhF,CAA+GhB,SAA/G,CAAgFgB,0BAAhF,C","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n      'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n      'x-rapidapi-key': 'f2886fbfcamsh28008c0e5f20068p1bd8c9jsn57cb2e3b1439'\n}\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\n\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({  baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: (count) => createRequest(`/coins?limit=${count}`),\n        }),\n        getCryptoDetails: builder.query({\n            query: (coinId) => createRequest(`/coin/${coinId}`),\n        }),\n        getCryptoHistory: builder.query({\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\n        }),\n        getCryptoExchanges: builder.query({\n            query: () => createRequest(`/exchanges`),\n        })\n    })\n});\n\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetCryptoExchangesQuery } = cryptoApi;"]},"metadata":{},"sourceType":"module"}