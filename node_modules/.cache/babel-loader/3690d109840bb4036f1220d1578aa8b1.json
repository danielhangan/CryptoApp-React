{"ast":null,"code":"var _jsxFileName = \"/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Table, Typography } from 'antd';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst Exchanges = () => {\n  _s();\n\n  const {\n    data,\n    isFetching\n  } = useGetCryptoExchangesQuery(10);\n  if (isFetching) return 'Loading...';\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Exchanges\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Exchanges, \"ZdVHRKEf55DOJrZPu2OsGsDhinM=\", false, function () {\n  return [useGetCryptoExchangesQuery];\n});\n\n_c = Exchanges;\nexport default Exchanges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"sources":["/home/scooch/Dev/projects/cryptoapp/src/components/Exchanges.jsx"],"names":["React","Table","Typography","useGetCryptoExchangesQuery","Title","Exchanges","data","isFetching","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,MAAlC;AACA,SAASC,0BAAT,QAA2C,uBAA3C;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYF,UAAlB;;AAGA,MAAMG,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBJ,0BAA0B,CAAC,EAAD,CAAvD;AAEA,MAAGI,UAAH,EAAe,OAAO,YAAP;AAEfC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAZD;;GAAMD,S;UAC2BF,0B;;;KAD3BE,S;AAcN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { Table, Typography } from 'antd';\nimport { useGetCryptoExchangesQuery } from '../services/cryptoApi';\n\nconst { Title } = Typography;\n\n\nconst Exchanges = () => {\n    const { data, isFetching } = useGetCryptoExchangesQuery(10);\n\n    if(isFetching) return 'Loading...'\n\n    console.log(data)\n\n    return (\n        <div>\n            Exchanges\n        </div>\n    )\n}\n\nexport default Exchanges\n"]},"metadata":{},"sourceType":"module"}